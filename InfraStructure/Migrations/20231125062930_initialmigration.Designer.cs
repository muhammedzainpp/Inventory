// <auto-generated />
using InfraStructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InfraStructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231125062930_initialmigration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("InventoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            InventoryName = "Gas Engine",
                            Price = 1000.0,
                            Quantity = 1
                        },
                        new
                        {
                            InventoryId = 2,
                            InventoryName = "Body",
                            Price = 400.0,
                            Quantity = 1
                        },
                        new
                        {
                            InventoryId = 3,
                            InventoryName = "Wheel",
                            Price = 100.0,
                            Quantity = 4
                        },
                        new
                        {
                            InventoryId = 4,
                            InventoryName = "Seat",
                            Price = 50.0,
                            Quantity = 5
                        },
                        new
                        {
                            InventoryId = 5,
                            InventoryName = "Electric Engine",
                            Price = 8000.0,
                            Quantity = 2
                        },
                        new
                        {
                            InventoryId = 6,
                            InventoryName = "Battery",
                            Price = 400.0,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("Domain.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Price = 1000.0,
                            ProductName = "Car",
                            Quantity = 1
                        },
                        new
                        {
                            ProductId = 2,
                            Price = 400.0,
                            ProductName = "Bike",
                            Quantity = 1
                        },
                        new
                        {
                            ProductId = 3,
                            Price = 100.0,
                            ProductName = "Truck",
                            Quantity = 4
                        },
                        new
                        {
                            ProductId = 4,
                            Price = 50.0,
                            ProductName = "Auto",
                            Quantity = 5
                        },
                        new
                        {
                            ProductId = 5,
                            Price = 8000.0,
                            ProductName = " Jeep",
                            Quantity = 2
                        },
                        new
                        {
                            ProductId = 6,
                            Price = 400.0,
                            ProductName = "Caravan",
                            Quantity = 5
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
